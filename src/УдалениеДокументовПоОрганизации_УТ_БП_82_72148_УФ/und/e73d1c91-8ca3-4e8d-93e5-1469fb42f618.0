{3,
{46,0,0,0,0,1,0,1,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{2,3ccc650e-f631-4cae-8e33-3eaac610b5f9,"ПриОткрытии",9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере",1,0,3ccc650e-f631-4cae-8e33-3eaac610b5f9,0,1,9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,0,1},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},1,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{11,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаВыполнитьУдаление",
{1,0},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,1,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{16,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаВыполнитьУдалениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,0,0,3,3},13,3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{10,
{24,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"Декорация1",
{1,1,
{"ru","Удаляются все документы, у которых есть реквизит Организация"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{21,
{25,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"Декорация1КонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,2,
{1,
{1,1,
{"ru","Удаляются все документы, у которых есть реквизит Организация"}
},0},0,1,
{10,
{26,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Декорация1РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},1,0,0,1,0,3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{9,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"Период",1,0,
{1,0},
{1,0},
{1,
{2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{10,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ПериодКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{17,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПериодРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{5,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"Организация",1,0,
{1,0},
{1,0},
{1,
{4}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{6,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ОрганизацияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{18,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ОрганизацияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{7,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"Непосредственно",1,0,
{1,0},
{1,0},
{1,
{3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{8,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"НепосредственноКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{19,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"НепосредственноРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{36,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ОбменДаннымиЗагрузка",1,0,
{1,0},
{1,0},
{1,
{10}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{37,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ОбменДаннымиЗагрузкаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{38,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ОбменДаннымиЗагрузкаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{10,
{27,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"Декорация2",
{1,1,
{"ru","Только для 1С:Бухгалтерия:"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{21,
{28,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"Декорация2КонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,2,
{1,
{1,1,
{"ru","Только для 1С:Бухгалтерия:"}
},0},0,1,
{10,
{29,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Декорация2РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},1,0,0,1,0,3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{14,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"СдвинутьБухИтогиВПрошлое",1,0,
{1,0},
{1,0},
{1,
{8}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{15,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"СдвинутьБухИтогиВПрошлоеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{23,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СдвинутьБухИтогиВПрошлоеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{10,
{33,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"Декорация3",
{1,1,
{"ru","Для регистров накопления:"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{21,
{34,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"Декорация3КонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,2,
{1,
{1,1,
{"ru","Для регистров накопления:"}
},0},0,1,
{10,
{35,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Декорация3РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},1,0,0,1,0,3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{30,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"СдвинутьРегистрыНакопленияВПрошлое",1,0,
{1,0},
{1,0},
{1,
{9}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{31,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СдвинутьРегистрыНакопленияВПрошлоеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{32,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СдвинутьРегистрыНакопленияВПрошлоеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{39,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаФоновыеЗадания",
{1,1,
{"ru","Группа фоновые задания"}
},
{1,1,
{"ru","Группа фоновые задания"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},3,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ИспользоватьФоновыеЗадания",1,0,
{1,0},
{1,0},
{1,
{5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ИспользоватьФоновыеЗаданияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{20,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИспользоватьФоновыеЗаданияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{3,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"КоличествоДокументовВПакете",1,0,
{1,0},
{1,1,
{"ru","Обязательно указывать, если включен флажок ""Использовать фоновые задания"""}
},
{1,
{6}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{4,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"КоличествоДокументовВПакетеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{21,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КоличествоДокументовВПакетеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{12,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"КоличествоОдновременныхПроцессов",1,0,
{1,0},
{1,0},
{1,
{7}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{13,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"КоличествоОдновременныхПроцессовКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{22,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КоличествоОдновременныхПроцессовРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{40,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаФоновыеЗаданияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{10,
{45,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"Декорация4",
{1,1,
{"ru","Справочники и регистры сведений лучше удалять в режиме ОбменДанными.Загрузка = Истина"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{21,
{46,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"Декорация4КонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,2,
{1,
{1,1,
{"ru","Справочники и регистры сведений лучше удалять в режиме ОбменДанными.Загрузка = Истина"}
},0},0,1,
{10,
{47,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Декорация4РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},1,0,0,1,0,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{41,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"УдалитьРегистрыСведений",
{1,0},1,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{42,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"УдалитьРегистрыСведенийРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{43,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},1,"УдалитьСправочники",
{1,0},1,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{44,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"УдалитьСправочникиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",2,0,0,0,0,0,3,3,0,0,2,100,1,1,0},"
//Обработчик кнопки ""Выполнить""
&НаКлиенте
Процедура ВыполнитьУдаление(Команда)
	
	#Если Не ВебКлиент Тогда
		
		Отказ = Ложь;
		
		ТекстВопроса = ""Выполнить удаление документов?"";
		
		Если Объект.МодальностьРазрешена Тогда
			КодВыполнения = ""
			|Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			|ВыполнитьУдалениеЗавершение(Ответ, Отказ);"";
		Иначе
			Отказ = Ложь;
			КодВыполнения = ""
			|Оповещение = Новый ОписаниеОповещения(""""ВыполнитьУдалениеЗавершение"""", ЭтаФорма);
			|ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);"";
		КонецЕсли;
		
		Выполнить(КодВыполнения);
		
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьУдалениеЗавершение(Результат, Отказ = Истина) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ВыполнитьУдалениеСервер();
	
	ОповеститьОЗавершении();
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОЗавершении()
	
	#Если Не ВебКлиент Тогда
		
		Если Объект.МодальностьРазрешена Тогда
			
			Если ОбменДаннымиЗагрузка = Истина Тогда
				ТекстТИИ = "" После удаления запустите Тестирование и Исправление, чтобы очистить движения документов!"";
			Иначе
				ТекстТИИ = """";
			КонецЕсли;
			
			КодВыполнения = ""
			|Предупреждение(""""Удаление завершено!""""+ТекстТИИ);"";
		Иначе
				
			Если ОбменДаннымиЗагрузка = Истина Тогда
				КодВыполнения = ""
				|ПоказатьПредупреждение(,НСтр(""""ru = 'Удаление завершено! После удаления запустите Тестирование и Исправление, чтобы очистить движения документов!'; en = 'documents has been deleted! Now you need to run Test and Repair function from Designer'""""), 10);"";
				
			Иначе
				КодВыполнения = ""
				|ПоказатьПредупреждение(,НСтр(""""ru = 'Удаление завершено!'; en = 'documents has been deleted!'""""), 10);"";
			КонецЕсли;
			
		КонецЕсли;
		
		Выполнить(КодВыполнения);
		
	#КонецЕсли
	
КонецПроцедуры

//Основная функция удаления
&НаСервере
Процедура ВыполнитьУдалениеСервер()
	
	тлог = ПолучитьЛог();
	Лог(тлог, ""------------------------------------------------------"");
	Лог(тлог, ""Начали удаление документов. Организация = ""+Организация+"". Режим ОбменДанными.Загрузка = ""+строка(ОбменДаннымиЗагрузка));
	
	//сдвиг итогов хозрасчетного
	БухИтогиСдвинуты = Ложь;
	Если Метаданные.РегистрыБухгалтерии.Найти(""Хозрасчетный"") <> Неопределено Тогда
		Если СдвинутьБухИтогиВПрошлое = Истина Тогда
			Если ЗначениеЗаполнено(Период.ДатаНачала) Тогда
				ДатаИтогов = НачалоМесяца(Период.ДатаНачала)-1;
			Иначе
				ДатаИтогов = '20010101';
			КонецЕсли;
			РегистрыБухгалтерии.Хозрасчетный.УстановитьПериодРассчитанныхИтогов(ДатаИтогов);
			БухИтогиСдвинуты = Истина;
			Лог(тлог, ""Включен режим сдвига итогов. БухИтоги сдвинуты на 01.01.2001"");
		КонецЕсли;
	КонецЕсли;
	
	//сюда поместим регистры накопления, у которых используются не итоги, а агрегаты, чтобы правильно включить их использование после удаления документов
	СоотвРегистрыНакопленияАгрегаты = Новый Соответствие;
	
	//сдвиг итогов регистров накопления
	РегистрыНакопленияСдвинуты = Ложь;
	Для Каждого Рег Из Метаданные.РегистрыНакопления Цикл
		Если СдвинутьРегистрыНакопленияВПрошлое = Истина Тогда
			Если ЗначениеЗаполнено(Период.ДатаНачала) Тогда
				ДатаИтогов = НачалоМесяца(Период.ДатаНачала)-1;
			Иначе
				ДатаИтогов = '20010101';
			КонецЕсли;
			

			Если Строка(Метаданные.РегистрыНакопления[Рег.Имя].ВидРегистра) = ""Остатки"" Тогда //почему-то ругается на ВидРегистраНакопления.Остатки...
				РегистрыНакопления[Рег.Имя].УстановитьПериодРассчитанныхИтогов(ДатаИтогов);
				//Лог(тлог, ""Включен режим сдвига итогов. Отключены итоги регистра накопления ""+РегистрыНакопления[Рег.Имя]+"". Период итогов ""+Строка(ДатаИтогов));
			Иначе
				//запомним регистры оборотов с агрегатами
				Если РегистрыНакопления[Рег.Имя].ПолучитьРежимАгрегатов() = Истина Тогда
					СоотвРегистрыНакопленияАгрегаты.Вставить(Рег.Имя, Истина);
				КонецЕсли;
				Если СоотвРегистрыНакопленияАгрегаты.Получить(Рег.Имя) = Неопределено Тогда
					РегистрыНакопления[Рег.Имя].УстановитьИспользованиеИтогов(Ложь);
					//Лог(тлог, ""Включен режим сдвига итогов. Отключены итоги регистра накопления ""+РегистрыНакопления[Рег.Имя]);
				Иначе
					РегистрыНакопления[Рег.Имя].УстановитьИспользованиеАгрегатов (Ложь);
					//Лог(тлог, ""Включен режим сдвига итогов. Отключены агрегаты регистра накопления ""+РегистрыНакопления[Рег.Имя]);
				КонецЕсли;
			КонецЕсли;
			РегистрыНакопленияСдвинуты = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр(""ДатаНач"", Период.ДатаНачала);
	Запрос.УстановитьПараметр(""ДатаКон"", ?(ЗначениеЗаполнено(Период.ДатаОкончания), Период.ДатаОкончания, '29990101'));
	Запрос.УстановитьПараметр(""Организация"", Организация);
	
	Лог(тлог, """");
	
	//справочник, от состояния которого зависит возможность удаления документов
	УдалитьСправочникКомплектыОтчетностиПерсучета_БП(тлог);	
	
	Для Каждого Д из Метаданные.Документы Цикл
		
		Если Д.Реквизиты.Найти(""Организация"")=Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		РазрешеноСтавитьПометкуНаУдаление = ПравоДоступа(""ИнтерактивнаяПометкаУдаления"", Метаданные.Документы[Д.Имя]);
		Если НЕ Непосредственно И Не РазрешеноСтавитьПометкуНаУдаление Тогда
			//добавить вывод в лог
			ЗаписьЖурналаРегистрации(""Удаление документов"", УровеньЖурналаРегистрации.Информация,,,""Нет прав на пометку удаления: ""+строка(Д.Имя));
			Лог(тлог, ""Нет прав на пометку удаления: ""+строка(Д.Имя));
			Продолжить;
		КонецЕсли;
		
		РазрешеноУдалятьНепосредственно = ПравоДоступа(""ИнтерактивноеУдаление"", Метаданные.Документы[Д.Имя]);
		Если Непосредственно И Не РазрешеноУдалятьНепосредственно Тогда
			//добавить вывод в лог
			ЗаписьЖурналаРегистрации(""Удаление документов"", УровеньЖурналаРегистрации.Информация,,,""Нет прав на интерактивное удаление: ""+строка(Д.Имя));
			Лог(тлог, ""Нет прав на интерактивное удаление: ""+строка(Д.Имя));
			Продолжить;
		КонецЕсли;
		
		//ну да, запрос в цикле, а что делать :)
		Запрос.Текст = 
		""ВЫБРАТЬ
		|	Док.Ссылка КАК Ссылка,
		|	1 КАК СсылкаПредставление
		|ИЗ
		|	Документ.АвансовыйОтчет КАК Док
		|ГДЕ
		|	Док.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|	И &УсловиеУдален
		|	И &УсловиеОрганизация
		|
		|УПОРЯДОЧИТЬ ПО
		|	Док.Дата"";
		
		Если ЗначениеЗаполнено(Организация) Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, ""&УсловиеОрганизация"", ""Док.Организация = &Организация"");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, ""&УсловиеОрганизация"", ""ИСТИНА"");
		КонецЕсли;
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ""1 КАК"", ""ПРЕДСТАВЛЕНИЕ(Док.Ссылка) КАК"");
		Если Непосредственно Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, ""&УсловиеУдален"", ""ИСТИНА"");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, ""&УсловиеУдален"", ""Док.ПометкаУдаления = ЛОЖЬ"");
		КонецЕсли;
		
		//Это чтобы можно быть текст запрос открывать в конструкторе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ""АвансовыйОтчет"", Д.Имя);
		
		Рез = Запрос.Выполнить();
		Если Рез.Пустой() Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ИспользоватьФоновыеЗадания Тогда
			
			//документы
			Выборка = Рез.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				//добавить вывод в лог
				
				ъ = Выборка.Ссылка.ПолучитьОбъект();
				
				ъ.ОбменДанными.Загрузка = ОбменДаннымиЗагрузка;
				
				ВыполнитьУдалениеОбъекта(тлог, ъ, Выборка.СсылкаПредставление, ""документ"");
				
			КонецЦикла;
			
			//договоры
			
			
		Иначе
			//28 05 16
			
			//фоновые задания. надо провести ревизию кода и доделать
			
			//НЗ = 1;
			//
			//ЭтоСервер = ?(Найти(СтрокаСоединенияИнформационнойБазы(), ""Srvr"")=0,Ложь,Истина);
			//
			//т = Новый ТаблицаЗначений;
			//т.Колонки.Добавить(""Ссылка"");
			//
			//Выборка = Рез.Выбрать();
			//ф = Выборка.Следующий();
			//Пока ф Цикл
			//	
			//	м = 0;
			//	т.Очистить();
			//	
			//	Пока ф И м <= КоличествоДокументовВПакете Цикл
			//		й 			= т.Добавить();
			//		й.Ссылка 	= Выборка.Ссылка;
			//		ф = Выборка.Следующий();
			//	КонецЦикла;
			//	
			//	Если ЭтоСервер Тогда
			//		
			//		МПараметры = Новый Массив;
			//		МПараметры.Добавить(т);
			//		МПараметры.Добавить(НЗ);
			//		МПараметры.Добавить(Непосредственно);
			//		
			//		ЗапуститьВФоне(""_Имя_Общего_Модуля_.ВыполнитьУдалениеСервер_Фон"", МПараметры, ф);
			//		
			//		НЗ = НЗ + 1; 
			//	Иначе
			//		//если данная процедура будет вызываться из общего модуля, то следует дописать имя общего модуля впереди.
			//		//можно оставить вызов из этого модуля, но тогда следует помнить, что существует 2 одинаковых процедуры
			//		//и при внесении изменений в одну, также модифицировать и другую, чтобы не допускать различий в алгоритме.
			//		ВыполнитьУдалениеСервер_Фон(т, НЗ, Непосредственно);
			//	КонецЕсли;
			//	
			//КонецЦикла;	
			
		КонецЕсли;
		
	КонецЦикла;	 //по документам из метаданных
	
	Лог(тлог, """");	
	
	Если БухИтогиСдвинуты = Истина Тогда
		РегистрыБухгалтерии.Хозрасчетный.УстановитьПериодРассчитанныхИтогов(НачалоМесяца(ТекущаяДата())-1);
		БухИтогиСдвинуты = Ложь;
		Лог(тлог, ""Включен режим сдвига итогов. БухИтоги сдвинуты на ""+строка(НачалоМесяца(ТекущаяДата())-1));
	КонецЕсли;

	Если РегистрыНакопленияСдвинуты = Истина Тогда
		Для Каждого Рег Из Метаданные.РегистрыНакопления Цикл
			
			Если Строка(Метаданные.РегистрыНакопления[Рег.Имя].ВидРегистра) = ""Остатки"" Тогда //почему-то ругается на ВидРегистраНакопления.Остатки...
				РегистрыНакопления[Рег.Имя].УстановитьПериодРассчитанныхИтогов(НачалоМесяца(ТекущаяДата())-1);
				//Лог(тлог, ""Включен режим сдвига итогов. Включены итоги регистра накопления ""+РегистрыНакопления[Рег.Имя]+"". Период итогов ""+Строка(НачалоМесяца(ТекущаяДата())-1));
			Иначе
				
				Если СоотвРегистрыНакопленияАгрегаты.Получить(Рег.Имя) = Неопределено Тогда
					РегистрыНакопления[Рег.Имя].УстановитьИспользованиеИтогов(Истина);
					//Лог(тлог, ""Включен режим сдвига итогов. Включены итоги регистра накопления ""+РегистрыНакопления[Рег.Имя]);
				Иначе
					РегистрыНакопления[Рег.Имя].УстановитьИспользованиеАгрегатов (Истина);
					//Лог(тлог, ""Включен режим сдвига итогов. Включены агрегаты регистра накопления ""+РегистрыНакопления[Рег.Имя]);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры



//рефакторинг
//Пример использования:
//	ВыполнитьУдалениеОбъекта(тлог, ъ, Выборка.СсылкаПредставление, ""документ"")
//
Процедура ВыполнитьУдалениеОбъекта(тлог, ъ, Представление, ВидОбъекта = ""документ"")

	
	Если Непосредственно Тогда
		Попытка
			ъ.Удалить();
			ЗаписьЖурналаРегистрации(""Удаление.""+ВидОбъекта, УровеньЖурналаРегистрации.Информация,,,""Удален непосредственно: ""+Представление);
			Лог(тлог, ""Удален непосредственно: ""+Представление);
		Исключение
			ЗаписьЖурналаРегистрации(""Удаление.""+ВидОбъекта, УровеньЖурналаРегистрации.Информация,,,""Ошибка удаления непосредственно: ""+Представление+"". Описание ошибки: ""+ОписаниеОшибки());
			Лог(тлог, ""Удаление.""+ВидОбъекта+"". Ошибка удаления непосредственно: ""+Представление+"". Описание ошибки: ""+ОписаниеОшибки());
		КонецПопытки;
		
	Иначе	
		
		Если ОбменДаннымиЗагрузка = Истина Тогда
			Попытка
				ъ.ПометкаУдаления = Истина;
				Если ВидОбъекта = ""документ"" Тогда
					ъ.Проведен = Ложь;
				КонецЕсли;
				ъ.Записать();
				ЗаписьЖурналаРегистрации(""Удаление.""+ВидОбъекта, УровеньЖурналаРегистрации.Информация,,ъ.Ссылка,""Помечен на удаление"");
				Лог(тлог, ""Удаление.""+ВидОбъекта+"". Помечен на удаление: ""+Представление);
			Исключение
				ЗаписьЖурналаРегистрации(""Удаление.""+ВидОбъекта, УровеньЖурналаРегистрации.Ошибка,,ъ.Ссылка,""Ошибка пометки на удаление. Подробности: ""+ОписаниеОшибки());
				Лог(тлог, ""Удаление.""+ВидОбъекта+"". Ошибка пометки на удаление: ""+Представление+"". Подробности: ""+ОписаниеОшибки());
			КонецПопытки;
		Иначе
			
			Попытка
				ъ.УстановитьПометкуУдаления(Истина);
				ЗаписьЖурналаРегистрации(""Удаление.""+ВидОбъекта, УровеньЖурналаРегистрации.Информация,,ъ.Ссылка,""Помечен на удаление"");
				Лог(тлог, ""Удаление.""+ВидОбъекта+"". Помечен на удаление: ""+Представление);
			Исключение
				ЗаписьЖурналаРегистрации(""Удаление.""+ВидОбъекта, УровеньЖурналаРегистрации.Ошибка,,ъ.Ссылка,""Ошибка пометки на удаление. Подробности: ""+ОписаниеОшибки());
				Лог(тлог, ""Удаление.""+ВидОбъекта+"". Ошибка пометки на удаление: ""+Представление+"". Подробности: ""+ОписаниеОшибки());
			КонецПопытки;
		КонецЕсли;
		
		
	КонецЕсли;	

КонецПроцедуры


//эту процедуру следует поместить в серверный общий модуль
//Параметры
//	НЗ - число - номер задания
&НаСервере
Процедура ВыполнитьУдалениеСервер_Фон(т, НЗ, Непосредственно)
	
	Для Каждого стр Из т Цикл
		
		ъ = стр.Ссылка.ПолучитьОбъект();
		
		Если Непосредственно Тогда
			ъ.Удалить();
		Иначе	
			ъ.УстановитьПометкуУдаления(Истина);
		КонецЕсли;	
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗапуститьВФоне(ИмяМетода, МПараметры, ф)
	
	Попытка
		МассивЗаданий = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура(""ИмяМетода,Состояние"", ИмяМетода, СостояниеФоновогоЗадания.Активно));
	Исключение
		МассивЗаданий = Новый Массив;
	КонецПопытки;
	
	Задание = ФоновыеЗадания.Выполнить(ИмяМетода, МПараметры, Неопределено, ""Удаление документов в фоне. infostart.ru № 72148"");
	
	МассивЗаданий.Добавить(Задание);
		
	Если (МассивЗаданий.Количество() >= КоличествоОдновременныхПроцессов) ИЛИ (НЕ ф) Тогда
		ФоновыеЗадания.ОжидатьЗавершения(МассивЗаданий);
		МассивЗаданий.Очистить();
	КонецЕсли;
	
КонецПроцедуры

//Этот справочник надо выделить особо. Если его не удалить перед удалением документов, то 
//будет возникать ошибка
//06.11.2017 16:52:33 Не удалось удалить Комплект №1 за 1 кв. 2016 г. по причине 
//{ВнешняяОбработка.УдалитьВсеДокументыПоФирме82УФ.Форма.Форма.Форма(767)}: 
//Ошибка при вызове метода контекста (УстановитьПометкуУдаления): Ошибка при выполнении обработчика - 'ПередЗаписью':
//{Справочник.КомплектыОтчетностиПерсучета.МодульОбъекта(6209)}: Ошибка при вызове метода контекста 
//(УстановитьПометкуУдаления): Ошибка при выполнении обработчика - 'ПередЗаписью':
//{Справочник.КомплектыОтчетностиПерсучета.МодульМенеджера(1695)}: 
//Документ входит в комплект отчетности, сведения которого разнесены по лицевым счетам. Отмена проведения запрещена.
//
//Параметры
//	тлог - ЗаписьТекста - запись в лог
&НаСервере
Процедура УдалитьСправочникКомплектыОтчетностиПерсучета_БП(тлог)

	а = метаданные.НайтиПоПолномуИмени(""Справочник.КомплектыОтчетностиПерсучета"");
	Если а = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		""ВЫБРАТЬ
		|	Спр.Ссылка КАК Ссылка,
		|	1 КАК СсылкаПредставление
		|ИЗ
		|	Справочник.КомплектыОтчетностиПерсучета КАК Спр
		|ГДЕ
		|	Спр.Организация = &Организация
		|	И &УсловиеУдален
		|	И &УсловиеОрганизация"";
	
		Если ЗначениеЗаполнено(Организация) Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, ""&УсловиеОрганизация"", ""Спр.Организация = &Организация"");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, ""&УсловиеОрганизация"", ""ИСТИНА"");
		КонецЕсли;
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ""1 КАК"", ""ПРЕДСТАВЛЕНИЕ(Спр.Ссылка) КАК"");
		Если Непосредственно Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, ""&УсловиеУдален"", ""ИСТИНА"");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, ""&УсловиеУдален"", ""Спр.ПометкаУдаления = ЛОЖЬ"");
		КонецЕсли;
		
		
		
	Запрос.УстановитьПараметр(""Организация"", Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Лог(тлог, ""Удаление справочника КомплектыОтчетностиПерсучета - начало"");
	
	Пока Выборка.Следующий() Цикл
		
		ъ = Выборка.Ссылка.ПолучитьОбъект();
		
		ъ.ОбменДанными.Загрузка = Истина; //иначе сработает проверка ПередЗаписью() и не даст удалить
		
		//обязательно нужно сменить состояние комплекта!
		ъ.СостояниеКомплекта = Перечисления.СостояниеКомплектаОтчетностиПерсучета.СведенияНеСформированы;
		
		ъ.записать();
		
		ВыполнитьУдалениеОбъекта(тлог, ъ, Выборка.СсылкаПредставление, ""справочник"");
		
		
	КонецЦикла;
	

	Лог(тлог, ""Удаление справочника КомплектыОтчетностиПерсучета - конец"");
	
КонецПроцедуры





//Интерфейс



&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЭтоСервер = ?(Найти(СтрокаСоединенияИнформационнойБазы(), ""Srvr"")=0,Ложь,Истина);
	Если НЕ ЭтоСервер Тогда
		Элементы.ИспользоватьФоновыеЗадания.Видимость = Ложь;
		Элементы.КоличествоОдновременныхПроцессов.Видимость = Ложь;
		Элементы.КоличествоДокументовВПакете.Видимость = Ложь;
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Об = РеквизитФормыВЗначение(""Объект"");
	
	СисИнфо = Новый СистемнаяИнформация;
	Объект.ВерсияПриложения = СисИнфо.ВерсияПриложения;
	
	Если Лев(Объект.ВерсияПриложения, 3) = ""8.2"" Тогда
		Объект.МодальностьРазрешена = Истина;
	Иначе
		Выполнить(""Объект.МодальностьРазрешена = Метаданные.РежимИспользованияМодальности = Метаданные.СвойстваОбъектов.РежимИспользованияМодальности.Использовать;"");
	КонецЕсли;
	
	ПолноеИмяФайла = РеквизитФормыВЗначение(""Объект"").ИспользуемоеИмяФайла;
	
	мСтроки = РазложитьСтрокуВМассивПодстрок(ПолноеИмяФайла, ""\"");
	если ложь тогда мСтроки = Новый Массив; КонецЕсли;
	//получим имя каталога
	ИмяКаталога = """"; 
	Для сч = 0 по мСтроки.Количество() - 2 Цикл
		ИмяКаталога = ИмяКаталога + мСтроки.Получить(сч)+""\"";
	КонецЦикла;
	
	//Сообщить(ИмяКаталога);
	ЭтотОбъект.ИмяФайлаЛога = ИмяКаталога + ""лог_удаления_""+формат(ТекущаяДата(), ""ДФ=ддММгггг"")+"".txt"";
	
	тлог = ПолучитьЛог();
	
	Лог(тлог, ""----------------------------------------------------"");
	Лог(тлог, ""----------------------------------------------------"");
	Лог(тлог, ""Открыта обработка удаления объектов по организации"");
	
КонецПроцедуры

//Лог

Функция Лог(тлог, сообщение)
	
	если ложь тогда тлог = новый записьТекста; КонецЕсли;
	
	стрЛог = Формат(ТекущаяДата(),""ДФ=ддММгггг чч:мм:сс"") + "" "" + сообщение;
	
	попытка
		тлог.ЗаписатьСтроку(стрЛог);
	исключение
		тлог = ПолучитьЛог();
		тлог.ЗаписатьСтроку(стрЛог);
	КонецПопытки;
	
КонецФункции

Функция ПолучитьЛог()
	мФайлы = НайтиФайлы(ЭтотОбъект.ИмяФайлаЛога); 
	Если мФайлы.Количество() = 0 Тогда
		тлог = Новый ЗаписьТекста(ЭтотОбъект.ИмяФайлаЛога, КодировкаТекста.ANSI);
	Иначе
		тлог = Новый ЗаписьТекста();
		тлог.Открыть(ЭтотОбъект.ИмяФайлаЛога,КодировкаТекста.ANSI,,Истина);
	КонецЕсли;
	Возврат тлог;
КонецФункции

//Из БСП

// Разбивает строку на несколько строк по указанному разделителю. Разделитель может иметь любую длину.
// В случаях, когда разделителем является строка из одного символа, и не используется параметр СокращатьНепечатаемыеСимволы,
// рекомендуется использовать функцию платформы СтрРазделить.
//
// Параметры:
//  Значение               - Строка - текст с разделителями;
//  Разделитель            - Строка - разделитель строк текста, минимум 1 символ;
//  ПропускатьПустыеСтроки - Булево - признак необходимости включения в результат пустых строк.
//    Если параметр не задан, то функция работает в режиме совместимости со своей предыдущей версией:
//     - для разделителя-пробела пустые строки не включаются в результат, для остальных разделителей пустые строки
//       включаются в результат.
//     - если параметр Строка не содержит значащих символов или не содержит ни одного символа (пустая строка), то в
//       случае разделителя-пробела результатом функции будет массив, содержащий одно значение """" (пустая строка), а
//       при других разделителях результатом функции будет пустой массив.
//  СокращатьНепечатаемыеСимволы - Булево - сокращать непечатаемые символы по краям каждой из найденных подстрок.
//
// Возвращаемое значение:
//  Массив - массив строк.
//
// Пример:
//  СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("",один,,два,"", "","")
//  - возвратит массив из 5 элементов, три из которых  - пустые: """", ""один"", """", ""два"", """";
//  СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("",один,,два,"", "","", Истина)
//  - возвратит массив из двух элементов: ""один"", ""два"";
//  СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("" один   два  "", "" "")
//  - возвратит массив из двух элементов: ""один"", ""два"";
//  СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("""")
//  - возвратит пустой массив;
//  СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("""",,Ложь)
//  - возвратит массив с одним элементом: """"(пустая строка);
//  СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("""", "" "")
//  - возвратит массив с одним элементом: """" (пустая строка).
//
Функция РазложитьСтрокуВМассивПодстрок(Знач Значение, Знач Разделитель = "","", Знач ПропускатьПустыеСтроки = Неопределено, 
	СокращатьНепечатаемыеСимволы = Ложь)
	
	Результат = Новый Массив;
	
	// Для обеспечения обратной совместимости.
	Если ПропускатьПустыеСтроки = Неопределено Тогда
		ПропускатьПустыеСтроки = ?(Разделитель = "" "", Истина, Ложь);
		Если ПустаяСтрока(Значение) Тогда 
			Если Разделитель = "" "" Тогда
				Результат.Добавить("""");
			КонецЕсли;
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	//
	
	Позиция = СтрНайти(Значение, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Значение, Позиция - 1);
		Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
			Если СокращатьНепечатаемыеСимволы Тогда
				Результат.Добавить(СокрЛП(Подстрока));
			Иначе
				Результат.Добавить(Подстрока);
			КонецЕсли;
		КонецЕсли;
		Значение = Сред(Значение, Позиция + СтрДлина(Разделитель));
		Позиция = СтрНайти(Значение, Разделитель);
	КонецЦикла;
	
	Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Значение) Тогда
		Если СокращатьНепечатаемыеСимволы Тогда
			Результат.Добавить(СокрЛП(Значение));
		Иначе
			Результат.Добавить(Значение);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции 

//	Регистры сведений

&НаКлиенте
Процедура УдалитьРегистрыСведений(Команда)
	
	
	#Если Не ВебКлиент Тогда
		
		Отказ = Ложь;
		
		ТекстВопроса = ""Выполнить удаление регистров сведений?"";
		
		Если Объект.МодальностьРазрешена Тогда
			КодВыполнения = ""
			|Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			|ВыполнитьУдалениеРегистровСведенийЗавершение(Ответ, Отказ);"";
		Иначе
			Отказ = Ложь;
			КодВыполнения = ""
			|Оповещение = Новый ОписаниеОповещения(""""ВыполнитьУдалениеРегистровСведенийЗавершение"""", ЭтаФорма);
			|ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);"";
		КонецЕсли;
		
		Выполнить(КодВыполнения);
		
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьУдалениеРегистровСведенийЗавершение(Результат, Отказ = Истина) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	УдалитьРегистрыСведенийСервер();
	
	ОповеститьОЗавершенииРегистрыСведений();
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОЗавершенииРегистрыСведений()
	
	#Если Не ВебКлиент Тогда
		
		Если Объект.МодальностьРазрешена Тогда
			
			ТекстТИИ = """";
			
			КодВыполнения = ""
			|Предупреждение(""""Очистка регистров сведений завершена!""""+ТекстТИИ);"";
		Иначе
				
			КодВыполнения = ""
			|ПоказатьПредупреждение(,НСтр(""""ru = 'Очистка регистров сведений завершена!'; en = 'information registers has been cleaned!'""""), 10);"";
			
		КонецЕсли;
		
		Выполнить(КодВыполнения);
		
	#КонецЕсли
	
КонецПроцедуры

&НаСервере
Процедура УдалитьРегистрыСведенийСервер()
	
		тлог = ПолучитьЛог();
		Лог(тлог, ""----------------------------------"");
		Лог(тлог, ""Начали удаление регистров сведений"");
		
		мОрганизации = Новый Массив;
		мОрганизации.Добавить(Организация);
		
		мВключитьОбъекты = Новый Массив;
		Для сч = 0 По Метаданные.РегистрыСведений.Количество()-1 Цикл
			мВключитьОбъекты.Добавить(Метаданные.РегистрыСведений.Получить(сч));
		КонецЦикла;
		
		тзСсылки = НайтиПоСсылкам(мОрганизации, Новый Массив, мВключитьОбъекты, Новый Массив);
		
		тзСсылки.Свернуть(""Метаданные"","""");
		
		Для Каждого МД из тзСсылки Цикл
			
			Попытка
				НаборЗаписей = РегистрыСведений[МД.Метаданные.Имя].СоздатьНаборЗаписей();
			Исключение
				//иногда проскакивают не регистры сведений. почему - не понятно :(
				Лог(тлог, ""В поле Метаданные таблицы ссылок находится не регистр сведений! Там находится это: ""+МД.Метаданные.Имя+"", тип ""+ТипЗнч(МД.Метаданные));
				продолжить;
			КонецПопытки;
			попытка
				НаборЗаписей.Отбор.Организация.Установить(Организация);
				НаборЗаписей.Записать();
				Лог(тлог, ""Организация ""+строка(Организация)+"" удалена из регистра сведений ""+МД.Метаданные.Имя);
			Исключение
				Лог(тлог, ""В регистре сведений ""+МД.Метаданные.Имя+"" нет измерения Организация"");
				
				Для Каждого Изм из МД.Метаданные.Измерения Цикл
					Если Изм.Тип.СодержитТип(Тип(""СправочникСсылка.Организации"")) Тогда
						Лог(тлог, ""В регистре сведений ""+МД.Метаданные.Имя+"" измерение ""+Изм.Имя+"" содержит тип СправочникСсылка.Организации"");
						НаборЗаписей.Отбор[Изм.Имя].Установить(Организация);
						НаборЗаписей.Записать();
						Лог(тлог, ""		Организация ""+строка(Организация)+"" удалена из регистра сведений ""+МД.Метаданные.Имя);
					КонецЕсли;
				КонецЦикла;
				
			КонецПопытки;
			
		КонецЦикла;
	
КонецПроцедуры


//	Справочники


&НаКлиенте
Процедура УдалитьСправочники(Команда)
	
	
	#Если Не ВебКлиент Тогда
		
		Отказ = Ложь;
		
		ТекстВопроса = ""Выполнить удаление справочников?"";
		
		Если Объект.МодальностьРазрешена Тогда
			КодВыполнения = ""
			|Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			|ВыполнитьУдалениеСправочниковЗавершение(Ответ, Отказ);"";
		Иначе
			Отказ = Ложь;
			КодВыполнения = ""
			|Оповещение = Новый ОписаниеОповещения(""""ВыполнитьУдалениеСправочниковЗавершение"""", ЭтаФорма);
			|ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);"";
		КонецЕсли;
		
		Выполнить(КодВыполнения);
		
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьУдалениеСправочниковЗавершение(Результат, Отказ = Истина) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	УдалитьСправочникиСервер();
	
	ОповеститьОЗавершенииСправочники();
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОЗавершенииСправочники()
	
	#Если Не ВебКлиент Тогда
		
		Если Объект.МодальностьРазрешена Тогда
			
			ТекстТИИ = """";
			
			КодВыполнения = ""
			|Предупреждение(""""Очистка справочников завершена!""""+ТекстТИИ);"";
		Иначе
				
			КодВыполнения = ""
			|ПоказатьПредупреждение(,НСтр(""""ru = 'Очистка справочников завершена!'; en = 'Catalogs has been cleaned!'""""), 10);"";
			
		КонецЕсли;
		
		Выполнить(КодВыполнения);
		
	#КонецЕсли
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСправочникиСервер()
	
	тлог = ПолучитьЛог();
	Лог(тлог, ""----------------------------"");
	//Лог(тлог, ""Начали удаление справочников. Организация = ""+Организация+"". Режим ОбменДанными.Загрузка = ""+строка(ОбменДаннымиЗагрузка));
	
	мОрганизации = Новый Массив;
	мОрганизации.Добавить(Организация);
	
	мВключитьОбъекты = Новый Массив;
	Для сч = 0 По Метаданные.Справочники.Количество()-1 Цикл
		мВключитьОбъекты.Добавить(Метаданные.Справочники.Получить(сч));
	КонецЦикла;
	
	
	тзСсылки = НайтиПоСсылкам(мОрганизации, Новый Массив, мВключитьОбъекты, Новый Массив);
	
	Для Каждого МД из тзСсылки Цикл
		
		РазрешеноСтавитьПометкуНаУдаление = ПравоДоступа(""ИнтерактивнаяПометкаУдаления"", Метаданные.Справочники[МД.Метаданные.Имя]);
		Если НЕ Непосредственно И Не РазрешеноСтавитьПометкуНаУдаление Тогда
			//добавить вывод в лог
			ЗаписьЖурналаРегистрации(""Удаление справочников"", УровеньЖурналаРегистрации.Информация,,,""Нет прав на пометку удаления: ""+МД.Метаданные.Имя);
			Лог(тлог, ""Нет прав на пометку удаления: ""+МД.Метаданные.Имя);
			Продолжить;
		КонецЕсли;
		
		РазрешеноУдалятьНепосредственно = ПравоДоступа(""ИнтерактивноеУдаление"", Метаданные.Справочники[МД.Метаданные.Имя]);
		Если Непосредственно И Не РазрешеноУдалятьНепосредственно Тогда
			//добавить вывод в лог
			ЗаписьЖурналаРегистрации(""Удаление справочников"", УровеньЖурналаРегистрации.Информация,,,""Нет прав на интерактивное удаление: ""+МД.Метаданные.Имя);
			Лог(тлог, ""Нет прав на интерактивное удаление: ""+МД.Метаданные.Имя);
			Продолжить;
		КонецЕсли;		
		

		ъ = МД.Данные.ПолучитьОбъект();
		
		ъ.ОбменДанными.Загрузка = ОбменДаннымиЗагрузка;
		
		ПредставлениеОбъекта = строка(МД.Данные);
		
		ВыполнитьУдалениеОбъекта(тлог, ъ, ПредставлениеОбъекта, ""справочник"");
		
	КонецЦикла;
	
КонецПроцедуры

",
{4,11,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",b16fa194-3a76-4693-be8c-bc93852747d3}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"Период",
{1,1,
{"ru","Период"}
},
{"Pattern",
{"#",2fdc88ec-7c9b-43cd-8ba5-873f043bdd88}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{3},0,"Непосредственно",
{1,1,
{"ru","Удалять сразу, без пометки"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{4},0,"Организация",
{1,1,
{"ru","Организация"}
},
{"Pattern",
{"#",c92a1124-c41e-42a4-bda7-3bbac9c6039e}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{5},0,"ИспользоватьФоновыеЗадания",
{1,1,
{"ru","Удалять параллельно в нескольких фоновых заданиях"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{6},0,"КоличествоДокументовВПакете",
{1,1,
{"ru","Количество документов в пакете"}
},
{"Pattern",
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{7},0,"КоличествоОдновременныхПроцессов",
{1,1,
{"ru","Количество одновременных процессов"}
},
{"Pattern",
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{8},0,"СдвинутьБухИтогиВПрошлое",
{1,1,
{"ru","Сдвинуть бух итоги в прошлое"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{9},0,"СдвинутьРегистрыНакопленияВПрошлое",
{1,1,
{"ru","Сдвинуть регистры накопления в прошлое"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{10},0,"ОбменДаннымиЗагрузка",
{1,1,
{"ru","ОбменДанными.Загрузка = Истина"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,1,
{0}
},0,0,0,0,
{0,0},
{0,0}
},
{9,
{11},0,"ИмяФайлаЛога",
{1,1,
{"ru","Имя файла лога"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KCTxvdXRwdXRQ
YXJhbWV0ZXJzLz4NCjwvU2V0dGluZ3M+}
},
{0,0},
{0,3,
{8,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыполнитьУдаление",
{1,1,
{"ru","Выполнить"}
},
{1,1,
{"ru","Выполнить удаление"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ВыполнитьУдаление",3,0,0,
{0,0},1,0,1,0,0},
{8,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"УдалитьРегистрыСведений",
{1,1,
{"ru","Удалить регистры сведений"}
},
{1,1,
{"ru","Удалить регистры сведений"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"УдалитьРегистрыСведений",3,0,0,
{0,0},1,0,1,0,0},
{8,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"УдалитьСправочники",
{1,1,
{"ru","Удалить справочники"}
},
{1,1,
{"ru","Удалить справочники"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"УдалитьСправочники",3,0,0,
{0,0},1,0,1,0,0}
},
{0,0},
{0,0},0,0}