
&НаКлиенте
Процедура ВыполнитьУдаление(Команда)
	
	#Если Не ВебКлиент Тогда
		
		Отказ = Ложь;
		
		ТекстВопроса = "Выполнить удаление документов?";
		
		Если Объект.МодальностьРазрешена Тогда
			КодВыполнения = "
			|Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			|ВыполнитьУдалениеЗавершение(Ответ, Отказ);";
		Иначе
			Отказ = Ложь;
			КодВыполнения = "
			|Оповещение = Новый ОписаниеОповещения(""ВыполнитьУдалениеЗавершение"", ЭтаФорма);
			|ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);";
		КонецЕсли;
		
		Выполнить(КодВыполнения);
		
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьУдалениеЗавершение(Результат, Отказ = Истина) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ВыполнитьУдалениеСервер();
	
	ОповеститьОЗавершении();
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОЗавершении()
	
	#Если Не ВебКлиент Тогда
		
		Если Объект.МодальностьРазрешена Тогда
			КодВыполнения = "
			|Предупреждение(""Удаление завершено!"");";
		Иначе
			Отказ = Ложь;
			КодВыполнения = "
			|ПоказатьПредупреждение(,НСтр(""ru = 'Удаление завершено!'; en = 'documents has been deleted!'""), 10);";
		КонецЕсли;
		
		Выполнить(КодВыполнения);
		
	#КонецЕсли
	
КонецПроцедуры


&НаСервере
Процедура ВыполнитьУдалениеСервер()
	
	//сдвиг итогов хозрасчетного
	БухИтогиСдвинуты = Ложь;
	Если Метаданные.РегистрыБухгалтерии.Найти("Хозрасчетный") <> Неопределено Тогда
		Если СдвинутьБухИтогиВПрошлое = Истина Тогда
			Если ЗначениеЗаполнено(Период.ДатаНачала) Тогда
				ДатаИтогов = НачалоМесяца(Период.ДатаНачала)-1;
			Иначе
				ДатаИтогов = '20010101';
			КонецЕсли;
			РегистрыБухгалтерии.Хозрасчетный.УстановитьПериодРассчитанныхИтогов(ДатаИтогов);
			БухИтогиСдвинуты = Истина;
		КонецЕсли;
	КонецЕсли;
	
	//сюда поместим регистры накопления, у которых используются не итоги, а агрегаты, чтобы правильно включить их использование после удаления документов
	СоотвРегистрыНакопленияАгрегаты = Новый Соответствие;
	
	//сдвиг итогов регистров накопления
	РегистрыНакопленияСдвинуты = Ложь;
	Для Каждого Рег Из Метаданные.РегистрыНакопления Цикл
		Если СдвинутьРегистрыНакопленияВПрошлое = Истина Тогда
			Если ЗначениеЗаполнено(Период.ДатаНачала) Тогда
				ДатаИтогов = НачалоМесяца(Период.ДатаНачала)-1;
			Иначе
				ДатаИтогов = '20010101';
			КонецЕсли;
			

			Если Строка(Метаданные.РегистрыНакопления[Рег.Имя].ВидРегистра) = "Остатки" Тогда //почему-то ругается на ВидРегистраНакопления.Остатки...
				РегистрыНакопления[Рег.Имя].УстановитьПериодРассчитанныхИтогов(ДатаИтогов);
			Иначе
				//запомним регистры оборотов с агрегатами
				Если РегистрыНакопления[Рег.Имя].ПолучитьРежимАгрегатов() = Истина Тогда
					СоотвРегистрыНакопленияАгрегаты.Вставить(Рег.Имя, Истина);
				КонецЕсли;
				Если СоотвРегистрыНакопленияАгрегаты.Получить(Рег.Имя) = Неопределено Тогда
					РегистрыНакопления[Рег.Имя].УстановитьИспользованиеИтогов(Ложь);
				Иначе
					РегистрыНакопления[Рег.Имя].УстановитьИспользованиеАгрегатов (Ложь);
				КонецЕсли;
			КонецЕсли;
			РегистрыНакопленияСдвинуты = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаКон", ?(ЗначениеЗаполнено(Период.ДатаОкончания), Период.ДатаОкончания, '29990101'));
	Запрос.УстановитьПараметр("Организация", Организация);
	
	//доделать сдвиг бухитогов
	Для Каждого Д из Метаданные.Документы Цикл
		
		Если Д.Реквизиты.Найти("Организация")=Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		РазрешеноСтавитьПометкуНаУдаление = ПравоДоступа("ИнтерактивнаяПометкаУдаления", Метаданные.Документы[Д.Имя]);
		Если НЕ Непосредственно И Не РазрешеноСтавитьПометкуНаУдаление Тогда
			//добавить вывод в лог
			ЗаписьЖурналаРегистрации("Удаление документов", УровеньЖурналаРегистрации.Информация,,,"Нет прав на пометку удаления: "+строка(Д.Имя));
			Продолжить;
		КонецЕсли;
		
		РазрешеноУдалятьНепосредственно = ПравоДоступа("ИнтерактивноеУдаление", Метаданные.Документы[Д.Имя]);
		Если Непосредственно И Не РазрешеноУдалятьНепосредственно Тогда
			//добавить вывод в лог
			ЗаписьЖурналаРегистрации("Удаление документов", УровеньЖурналаРегистрации.Информация,,,"Нет прав на интерактивное удаление: "+строка(Д.Имя));
			Продолжить;
		КонецЕсли;
		
		//ну да, запрос в цикле, а что делать :)
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Док.Ссылка КАК Ссылка,
		|	1 КАК СсылкаПредставление
		|ИЗ
		|	Документ.АвансовыйОтчет КАК Док
		|ГДЕ
		|	Док.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|	И &УсловиеУдален
		|	И &УсловиеОрганизация
		|
		|УПОРЯДОЧИТЬ ПО
		|	Док.Дата";
		
		Если ЗначениеЗаполнено(Организация) Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОрганизация", "Док.Организация = &Организация");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОрганизация", "ИСТИНА");
		КонецЕсли;
		
		Если Непосредственно Тогда
			//чтобы уменьшить размер выборки в режиме Пометка удаления
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "1 КАК", "ПРЕДСТАВЛЕНИЕ(Док.Ссылка) КАК");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеУдален", "ИСТИНА");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеУдален", "Док.ПометкаУдаления = ЛОЖЬ");
		КонецЕсли;
		
		//Это чтобы можно быть текст запрос открывать в конструкторе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "АвансовыйОтчет", Д.Имя);
		
		Рез = Запрос.Выполнить();
		Если Рез.Пустой() Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ИспользоватьФоновыеЗадания Тогда
			
			//документы
			Выборка = Рез.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				//добавить вывод в лог
				
				ъ = Выборка.Ссылка.ПолучитьОбъект();
				
				Если ОбменДаннымиЗагрузка = Истина Тогда
					ъ.ОбменДанными.Загрузка = Истина;
				КонецЕсли;
				
				Если Непосредственно Тогда
					ЗаписьЖурналаРегистрации("Удаление документов", УровеньЖурналаРегистрации.Информация,,,"Удален непосредственно: "+строка(Выборка.СсылкаПредставление));
					ъ.Удалить();
				Иначе	
					ЗаписьЖурналаРегистрации("Удаление документов", УровеньЖурналаРегистрации.Информация,,Выборка.Ссылка,"Помечен на удаление");
					
					Если ОбменДаннымиЗагрузка = Истина Тогда
						ъ.ПометкаУдаления = Истина;
						ъ.Проведен = Ложь;
						ъ.Записать();
					Иначе
						ъ.УстановитьПометкуУдаления(Истина);
					КонецЕсли;
					
				КонецЕсли;	
				
			КонецЦикла;
			
			//договоры
			
			
		Иначе
			//28 05 16
			
			//фоновые задания. надо провести ревизию кода и доделать
			
			//НЗ = 1;
			//
			//ЭтоСервер = ?(Найти(СтрокаСоединенияИнформационнойБазы(), "Srvr")=0,Ложь,Истина);
			//
			//т = Новый ТаблицаЗначений;
			//т.Колонки.Добавить("Ссылка");
			//
			//Выборка = Рез.Выбрать();
			//ф = Выборка.Следующий();
			//Пока ф Цикл
			//	
			//	м = 0;
			//	т.Очистить();
			//	
			//	Пока ф И м <= КоличествоДокументовВПакете Цикл
			//		й 			= т.Добавить();
			//		й.Ссылка 	= Выборка.Ссылка;
			//		ф = Выборка.Следующий();
			//	КонецЦикла;
			//	
			//	Если ЭтоСервер Тогда
			//		
			//		МПараметры = Новый Массив;
			//		МПараметры.Добавить(т);
			//		МПараметры.Добавить(НЗ);
			//		МПараметры.Добавить(Непосредственно);
			//		
			//		ЗапуститьВФоне("_Имя_Общего_Модуля_.ВыполнитьУдалениеСервер_Фон", МПараметры, ф);
			//		
			//		НЗ = НЗ + 1; 
			//	Иначе
			//		//если данная процедура будет вызываться из общего модуля, то следует дописать имя общего модуля впереди.
			//		//можно оставить вызов из этого модуля, но тогда следует помнить, что существует 2 одинаковых процедуры
			//		//и при внесении изменений в одну, также модифицировать и другую, чтобы не допускать различий в алгоритме.
			//		ВыполнитьУдалениеСервер_Фон(т, НЗ, Непосредственно);
			//	КонецЕсли;
			//	
			//КонецЦикла;	
			
		КонецЕсли;
		
	КонецЦикла;	 //по документам из метаданных
	
	Если БухИтогиСдвинуты = Истина Тогда
		РегистрыБухгалтерии.Хозрасчетный.УстановитьПериодРассчитанныхИтогов(НачалоМесяца(ТекущаяДата())-1);
		БухИтогиСдвинуты = Ложь;
	КонецЕсли;

	Если РегистрыНакопленияСдвинуты = Истина Тогда
		Для Каждого Рег Из Метаданные.РегистрыНакопления Цикл
			
			Если Строка(Метаданные.РегистрыНакопления[Рег.Имя].ВидРегистра) = "Остатки" Тогда //почему-то ругается на ВидРегистраНакопления.Остатки...
				РегистрыНакопления[Рег.Имя].УстановитьПериодРассчитанныхИтогов(НачалоМесяца(ТекущаяДата())-1);
			Иначе
				
				Если СоотвРегистрыНакопленияАгрегаты.Получить(Рег.Имя) = Неопределено Тогда
					РегистрыНакопления[Рег.Имя].УстановитьИспользованиеИтогов(Истина);
				Иначе
					РегистрыНакопления[Рег.Имя].УстановитьИспользованиеАгрегатов (Истина);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

//эту процедуру следует поместить в серверный общий модуль
//Параметры
//	НЗ - число - номер задания
&НаСервере
Процедура ВыполнитьУдалениеСервер_Фон(т, НЗ, Непосредственно)
	
	Для Каждого стр Из т Цикл
		
		ъ = стр.Ссылка.ПолучитьОбъект();
		
		Если Непосредственно Тогда
			ъ.Удалить();
		Иначе	
			ъ.УстановитьПометкуУдаления(Истина);
		КонецЕсли;	
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗапуститьВФоне(ИмяМетода, МПараметры, ф)
	
	Попытка
		МассивЗаданий = ФоновыеЗадания.ПолучитьФоновыеЗадания(Новый Структура("ИмяМетода,Состояние", ИмяМетода, СостояниеФоновогоЗадания.Активно));
	Исключение
		МассивЗаданий = Новый Массив;
	КонецПопытки;
	
	Задание = ФоновыеЗадания.Выполнить(ИмяМетода, МПараметры, Неопределено, "Удаление документов в фоне. infostart.ru № 72148");
	
	МассивЗаданий.Добавить(Задание);
		
	Если (МассивЗаданий.Количество() >= КоличествоОдновременныхПроцессов) ИЛИ (НЕ ф) Тогда
		ФоновыеЗадания.ОжидатьЗавершения(МассивЗаданий);
		МассивЗаданий.Очистить();
	КонецЕсли;
	
КонецПроцедуры







//Интерфейс


&НаКлиенте
Процедура ИспользоватьФоновыеЗаданияПриИзменении(Элемент)
	ЭтоСервер = ?(Найти(СтрокаСоединенияИнформационнойБазы(), "Srvr")=0,Ложь,Истина);
	Если НЕ ЭтоСервер Тогда
		Предупреждение("Вы используете файловый вариант БД. Запуск заданий в фоне невозможен! Задания будут разделены на пакеты, но запускаться будут последовательно");
		//ИспользоватьФоновыеЗадания = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЭтоСервер = ?(Найти(СтрокаСоединенияИнформационнойБазы(), "Srvr")=0,Ложь,Истина);
	Если НЕ ЭтоСервер Тогда
		Элементы.ИспользоватьФоновыеЗадания.Видимость = Ложь;
		Элементы.КоличествоОдновременныхПроцессов.Видимость = Ложь;
		Элементы.КоличествоДокументовВПакете.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Об = РеквизитФормыВЗначение("Объект");
	
	СисИнфо = Новый СистемнаяИнформация;
	Объект.ВерсияПриложения = СисИнфо.ВерсияПриложения;
	
	Если Лев(Объект.ВерсияПриложения, 3) = "8.2" Тогда
		Объект.МодальностьРазрешена = Истина;
	Иначе
		Выполнить("Объект.МодальностьРазрешена = Метаданные.РежимИспользованияМодальности = Метаданные.СвойстваОбъектов.РежимИспользованияМодальности.Использовать;");
	КонецЕсли;
	
КонецПроцедуры
